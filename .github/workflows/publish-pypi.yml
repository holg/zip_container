name: PyPiCI

on:
  push:
    branches:
      - main
      - staging
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - staging
  workflow_dispatch:

permissions:
  contents: write

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Set CFLAGS for aarch64
        if: matrix.platform.target == 'aarch64'
        run: echo "CFLAGS_aarch64_unknown_linux_gnu=-march=armv8-a -D__ARM_ARCH=8" >> $GITHUB_ENV
      - name: Verify CFLAGS_aarch64_unknown_linux_gnu
        if: matrix.platform.target == 'aarch64'
        run: echo "CFLAGS_aarch64_unknown_linux_gnu=${{ env.CFLAGS_aarch64_unknown_linux_gnu }}"
      - name: Cache built wheels
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-wheels-${{ matrix.platform.target }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-wheels-${{ matrix.platform.target }}-
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --features python
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Cache built wheels
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-wheels-musllinux-${{ matrix.platform.target }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-wheels-musllinux-${{ matrix.platform.target }}-
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --features python
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Cache built wheels
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-wheels-windows-${{ matrix.platform.target }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-wheels-windows-${{ matrix.platform.target }}-
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --features python
          sccache: 'true'
      - name: Upload wheels
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Cache built wheels
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-wheels-macos-${{ matrix.platform.target }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-wheels-macos-${{ matrix.platform.target }}-
      - name: Build release wheels
        uses: PyO3/maturin-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter --features python
          sccache: 'true'
      - name: Upload wheels
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache built wheels
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-wheels-sdist-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-wheels-sdist-
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/release-*') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: "startsWith(github.ref, 'refs/tags/')"
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/prerelease-')
    needs: [ linux, musllinux, windows, macos, sdist ]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
      - name: Create GitHub Prerelease
        id: create_prerelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Pre-release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: List artifacts in dist
        run: ls -R ./dist
      - name: Upload Release Asset
        if: steps.create_prerelease.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_prerelease.outputs.upload_url }}
          asset_path: |
            ./dist/wheels-musllinux-aarch64/*
            ./dist/wheels-musllinux-armv7/*
            ./dist/wheels-musllinux-x86/*
            ./dist/wheels-musllinux-x86_64/*
            ./dist/wheels-sdist/*
            ./dist/wheels-windows-x64/*
            ./dist/wheels-windows-x86/*
            ./dist/wheels-linux-x86/*
            ./dist/wheels-linux-x86_64/*
            ./dist/wheels-macos-aarch64/*
            ./dist/wheels-macos-x86_64/*
          asset_name: wheels-*
          asset_content_type: application/zip
      - name: Debug Upload URL
        if: steps.create_prerelease.outputs.upload_url == ''
        run: echo "Upload URL not set. Skipping upload."